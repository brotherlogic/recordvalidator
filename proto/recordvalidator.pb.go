// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: recordvalidator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Schemes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schemes []*Scheme `protobuf:"bytes,1,rep,name=schemes,proto3" json:"schemes,omitempty"`
}

func (x *Schemes) Reset() {
	*x = Schemes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordvalidator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schemes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schemes) ProtoMessage() {}

func (x *Schemes) ProtoReflect() protoreflect.Message {
	mi := &file_recordvalidator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schemes.ProtoReflect.Descriptor instead.
func (*Schemes) Descriptor() ([]byte, []int) {
	return file_recordvalidator_proto_rawDescGZIP(), []int{0}
}

func (x *Schemes) GetSchemes() []*Scheme {
	if x != nil {
		return x.Schemes
	}
	return nil
}

type Scheme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StartTime    int64   `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	InstanceIds  []int32 `protobuf:"varint,3,rep,packed,name=instance_ids,json=instanceIds,proto3" json:"instance_ids,omitempty"`
	CompletedIds []int32 `protobuf:"varint,4,rep,packed,name=completed_ids,json=completedIds,proto3" json:"completed_ids,omitempty"`
	CurrentPick  int32   `protobuf:"varint,5,opt,name=current_pick,json=currentPick,proto3" json:"current_pick,omitempty"`
}

func (x *Scheme) Reset() {
	*x = Scheme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordvalidator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scheme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scheme) ProtoMessage() {}

func (x *Scheme) ProtoReflect() protoreflect.Message {
	mi := &file_recordvalidator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scheme.ProtoReflect.Descriptor instead.
func (*Scheme) Descriptor() ([]byte, []int) {
	return file_recordvalidator_proto_rawDescGZIP(), []int{1}
}

func (x *Scheme) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Scheme) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Scheme) GetInstanceIds() []int32 {
	if x != nil {
		return x.InstanceIds
	}
	return nil
}

func (x *Scheme) GetCompletedIds() []int32 {
	if x != nil {
		return x.CompletedIds
	}
	return nil
}

func (x *Scheme) GetCurrentPick() int32 {
	if x != nil {
		return x.CurrentPick
	}
	return 0
}

var File_recordvalidator_proto protoreflect.FileDescriptor

var file_recordvalidator_proto_rawDesc = []byte{
	0x0a, 0x15, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x3c, 0x0a, 0x07, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x07, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x42,
	0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recordvalidator_proto_rawDescOnce sync.Once
	file_recordvalidator_proto_rawDescData = file_recordvalidator_proto_rawDesc
)

func file_recordvalidator_proto_rawDescGZIP() []byte {
	file_recordvalidator_proto_rawDescOnce.Do(func() {
		file_recordvalidator_proto_rawDescData = protoimpl.X.CompressGZIP(file_recordvalidator_proto_rawDescData)
	})
	return file_recordvalidator_proto_rawDescData
}

var file_recordvalidator_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_recordvalidator_proto_goTypes = []interface{}{
	(*Schemes)(nil), // 0: recordvalidator.Schemes
	(*Scheme)(nil),  // 1: recordvalidator.Scheme
}
var file_recordvalidator_proto_depIdxs = []int32{
	1, // 0: recordvalidator.Schemes.schemes:type_name -> recordvalidator.Scheme
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_recordvalidator_proto_init() }
func file_recordvalidator_proto_init() {
	if File_recordvalidator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_recordvalidator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schemes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordvalidator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scheme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recordvalidator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_recordvalidator_proto_goTypes,
		DependencyIndexes: file_recordvalidator_proto_depIdxs,
		MessageInfos:      file_recordvalidator_proto_msgTypes,
	}.Build()
	File_recordvalidator_proto = out.File
	file_recordvalidator_proto_rawDesc = nil
	file_recordvalidator_proto_goTypes = nil
	file_recordvalidator_proto_depIdxs = nil
}
